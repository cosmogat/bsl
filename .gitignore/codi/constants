// -*- c++ -*-
// 17-01-2015
// billy
// constants
// basat en les constants de gsl en mks.
#ifndef _BSL_CONSTANTS_
#define _BSL_CONSTANTS_
#include <iostream>

namespace bsl {
  template <class TBC> class Constants;
  template <class TBC> class Constants {
  public:
    static constexpr TBC speed_of_light = TBC(2.99792458e8); // m / s 
    static constexpr TBC gravitational_constant = TBC(6.673e-11); // m^3 / kg s^2 
    static constexpr TBC plancks_constant_h = TBC(6.62606896e-34); // kg m^2 / s 
    static constexpr TBC plancks_constant_hbar = TBC(1.05457162825e-34); // kg m^2 / s 
    static constexpr TBC astronomical_unit = TBC(1.49597870691e11); // m 
    static constexpr TBC light_year = TBC(9.46053620707e15); // m 
    static constexpr TBC parsec = TBC(3.08567758135e16); // m 
    static constexpr TBC grav_earth = TBC(9.80665e0); // m / s^2 
    static constexpr TBC electron_volt = TBC(1.602176487e-19); // kg m^2 / s^2 
    static constexpr TBC mass_electron = TBC(9.10938188e-31); // kg 
    static constexpr TBC mass_muon = TBC(1.88353109e-28); // kg 
    static constexpr TBC mass_proton = TBC(1.67262158e-27); // kg 
    static constexpr TBC mass_neutron = TBC(1.67492716e-27); // kg 
    static constexpr TBC rydberg = TBC(2.17987196968e-18); // kg m^2 / s^2 
    static constexpr TBC boltzmann = TBC(1.3806504e-23); // kg m^2 / K s^2 
    static constexpr TBC molar_gas = TBC(8.314472e0); // kg m^2 / K mol s^2 
    static constexpr TBC standard_gas_volume = TBC(2.2710981e-2); // m^3 / mol 
    static constexpr TBC minute = TBC(6e1); // s 
    static constexpr TBC hour = TBC(3.6e3); // s 
    static constexpr TBC day = TBC(8.64e4); // s 
    static constexpr TBC week = TBC(6.048e5); // s 
    static constexpr TBC inch = TBC(2.54e-2); // m 
    static constexpr TBC foot = TBC(3.048e-1); // m 
    static constexpr TBC yard = TBC(9.144e-1); // m 
    static constexpr TBC mile = TBC(1.609344e3); // m 
    static constexpr TBC nautical_mile = TBC(1.852e3); // m 
    static constexpr TBC fathom = TBC(1.8288e0); // m 
    static constexpr TBC mil = TBC(2.54e-5); // m 
    static constexpr TBC point = TBC(3.52777777778e-4); // m 
    static constexpr TBC texpoint = TBC(3.51459803515e-4); // m 
    static constexpr TBC micron = TBC(1e-6); // m 
    static constexpr TBC angstrom = TBC(1e-10); // m 
    static constexpr TBC hectare = TBC(1e4); // m^2 
    static constexpr TBC acre = TBC(4.04685642241e3); // m^2 
    static constexpr TBC barn = TBC(1e-28); // m^2 
    static constexpr TBC liter = TBC(1e-3); // m^3 
    static constexpr TBC us_gallon = TBC(3.78541178402e-3); // m^3 
    static constexpr TBC quart = TBC(9.46352946004e-4); // m^3 
    static constexpr TBC pint = TBC(4.73176473002e-4); // m^3 
    static constexpr TBC cup = TBC(2.36588236501e-4); // m^3 
    static constexpr TBC fluid_ounce = TBC(2.95735295626e-5); // m^3 
    static constexpr TBC tablespoon = TBC(1.47867647813e-5); // m^3 
    static constexpr TBC teaspoon = TBC(4.92892159375e-6); // m^3 
    static constexpr TBC canadian_gallon = TBC(4.54609e-3); // m^3 
    static constexpr TBC uk_gallon = TBC(4.546092e-3); // m^3 
    static constexpr TBC miles_per_hour = TBC(4.4704e-1); // m / s 
    static constexpr TBC kilometers_per_hour = TBC(2.77777777778e-1); // m / s 
    static constexpr TBC knot = TBC(5.14444444444e-1); // m / s 
    static constexpr TBC pound_mass = TBC(4.5359237e-1); // kg 
    static constexpr TBC ounde_mass = TBC(2.8349523125e-2); // kg 
    static constexpr TBC ton = TBC(9.0718474e2); // kg 
    static constexpr TBC metric_ton = TBC(1e3); // kg 
    static constexpr TBC uk_ton = TBC(1.0160469088e3); // kg 
    static constexpr TBC troy_ounce = TBC(3.1103475e-2); // kg 
    static constexpr TBC carat = TBC(2e-4); // kg 
    static constexpr TBC unified_atomic_mass = TBC(1.660538782e-27); // kg 
    static constexpr TBC gram_force = TBC(9.80665e-3); // kg m / s^2 
    static constexpr TBC pound_force = TBC(4.44822161526e0); // kg m / s^2 
    static constexpr TBC kilopound_force = TBC(4.44822161526e3); // kg m / s^2 
    static constexpr TBC poundal = TBC(1.38255e-1); // kg m / s^2 
    static constexpr TBC calorie = TBC(4.1868e0); // kg m^2 / s^2 
    static constexpr TBC btu = TBC(1.05505585262e3); // kg m^2 / s^2 
    static constexpr TBC therm = TBC(1.05506e8); // kg m^2 / s^2 
    static constexpr TBC horsepower = TBC(7.457e2); // kg m^2 / s^3 
    static constexpr TBC bar = TBC(1e5); // kg / m s^2 
    static constexpr TBC std_atmosphere = TBC(1.01325e5); // kg / m s^2 
    static constexpr TBC torr = TBC(1.33322368421e2); // kg / m s^2 
    static constexpr TBC meter_of_mercury = TBC(1.33322368421e5); // kg / m s^2 
    static constexpr TBC inch_of_mercury = TBC(3.38638815789e3); // kg / m s^2 
    static constexpr TBC inch_of_water = TBC(2.490889e2); // kg / m s^2 
    static constexpr TBC psi = TBC(6.89475729317e3); // kg / m s^2 
    static constexpr TBC poise = TBC(1e-1); // kg m^-1 s^-1 
    static constexpr TBC stokes = TBC(1e-4); // m^2 / s 
    static constexpr TBC stilb = TBC(1e4); // cd / m^2 
    static constexpr TBC lumen = TBC(1e0); // cd sr 
    static constexpr TBC lux = TBC(1e0); // cd sr / m^2 
    static constexpr TBC phot = TBC(1e4); // cd sr / m^2 
    static constexpr TBC footcandle = TBC(1.076e1); // cd sr / m^2 
    static constexpr TBC lambert = TBC(1e4); // cd sr / m^2 
    static constexpr TBC footlambert = TBC(1.07639104e1); // cd sr / m^2 
    static constexpr TBC curie = TBC(3.7e10); // 1 / s 
    static constexpr TBC roentgen = TBC(2.58e-4); // A s / kg 
    static constexpr TBC rad = TBC(1e-2); // m^2 / s^2 
    static constexpr TBC solar_mass = TBC(1.98892e30); // kg 
    static constexpr TBC bohr_radius = TBC(5.291772083e-11); // m 
    static constexpr TBC newton = TBC(1e0); // kg m / s^2 
    static constexpr TBC dyne = TBC(1e-5); // kg m / s^2 
    static constexpr TBC joule = TBC(1e0); // kg m^2 / s^2 
    static constexpr TBC erg = TBC(1e-7); // kg m^2 / s^2 
    static constexpr TBC stefan_boltzmann_constant = TBC(5.67040047374e-8); // kg / K^4 s^3 
    static constexpr TBC thomson_cross_section = TBC(6.65245893699e-29); // m^2 
    static constexpr TBC bohr_magneton = TBC(9.27400899e-24); // A m^2 
    static constexpr TBC nuclear_magneton = TBC(5.05078317e-27); // A m^2 
    static constexpr TBC electron_magnetic_moment = TBC(9.28476362e-24); // A m^2 
    static constexpr TBC proton_magnetic_moment = TBC(1.410606633e-26); // A m^2 
    static constexpr TBC faraday = TBC(9.64853429775e4); // A s / mol 
    static constexpr TBC electron_charge = TBC(1.602176487e-19); // A s 
    static constexpr TBC vacuum_permittivity = TBC(8.854187817e-12); // A^2 s^4 / kg m^3 
    static constexpr TBC vacuum_permeability = TBC(1.25663706144e-6); // kg m / A^2 s^2 
    static constexpr TBC debye = TBC(3.33564095198e-30); // A s^2 / m^2 
    static constexpr TBC gauss = TBC(1e-4); // kg / A s^2 
    static constexpr TBC fine_structure = TBC(7.297352533e-3); // 1 
    static constexpr TBC avogadro = TBC(6.02214199e23); // 1 / mol 
    static constexpr TBC yotta = TBC(1e24); // 1 
    static constexpr TBC zetta = TBC(1e21); // 1 
    static constexpr TBC exa = TBC(1e18); // 1 
    static constexpr TBC peta = TBC(1e15); // 1 
    static constexpr TBC tera = TBC(1e12); // 1 
    static constexpr TBC giga = TBC(1e9); // 1 
    static constexpr TBC mega = TBC(1e6); // 1 
    static constexpr TBC kilo = TBC(1e3); // 1 
    static constexpr TBC mili = TBC(1e-3); // 1 
    static constexpr TBC micro = TBC(1e-6); // 1 
    static constexpr TBC nano = TBC(1e-9); // 1 
    static constexpr TBC pico = TBC(1e-12); // 1 
    static constexpr TBC femto = TBC(1e-15); // 1 
    static constexpr TBC atto = TBC(1e-18); // 1 
    static constexpr TBC zepto = TBC(1e-21); // 1 
    static constexpr TBC yocto = TBC(1e-24); // 1 
    static constexpr TBC exbi = TBC(1152921504606846976); // 1 
    static constexpr TBC pebi = TBC(1125899906842624); // 1 
    static constexpr TBC tebi = TBC(1099511627776); // 1 
    static constexpr TBC gibi = TBC(1073741824); // 1 
    static constexpr TBC mebi = TBC(1048576); // 1 
    static constexpr TBC kibi = TBC(1024); // 1 
  };
}

#endif

